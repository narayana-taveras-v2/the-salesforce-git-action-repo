# Actions list -> https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions
name: Salesforce Validation
on: [push, workflow_dispatch]
    # Events list -> https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
     
jobs:
    Run-Salesforce-Validation:
        name: Run Salesforce Validation
        runs-on: ubuntu-latest
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                    
            - name: Download & install Salesforce CLI
              run: |
                npm install @salesforce/cli --location=global
                nodeInstallPath=$(npm config get prefix)
                echo "$nodeInstallPath/bin" >> $GITHUB_PATH
                sf --version
                
            - name: Decrypt JWT Key
              shell: bash
              run: openssl aes-256-cbc -k ${{ secrets.PRIVATE_JWT_FILE_ENCRYPTION_PASSWORD }} -in assets/server.key.enc -out assets/server.key -d
    
            
            - name: Authenticate into Salesforce
              shell: bash
              run: |
                  echo "Logging into org..."
                  sf org login jwt --client-id ${{ secrets.DEV_ORG_CONSUMER_KEY }} --jwt-key-file assets/server.key --username ${{ secrets.DEV_ORG_USER }} --alias ci-org --set-default
    
            - name: Validate Deployment
              id: validate-deployment
              run: sf project deploy start --wait 10 -d force-app --dry-run
              continue-on-error: true
    
            - name: Run all Apex tests
              id: validate-test-classes
              run: sf apex run test -l RunLocalTests -r tap -d test-results
              continue-on-error: true
    
            - name: Check Deployment and Test Results
              if: always()
              run: |
                if steps.validate-deployment.outcome != 'success' || steps.validate-test-classes.outcome != 'success'; then
                echo "Deployment or Tests Failed!"
                exit 1
                else
                echo "Deployment and Tests Succeeded!"
                fi
